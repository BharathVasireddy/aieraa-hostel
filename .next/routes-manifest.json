{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/admin/menu/[id]/edit",
      "regex": "^/admin/menu/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/admin/menu/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/api/admin/menu/[id]",
      "regex": "^/api/admin/menu/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/menu/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/admin/orders/[id]",
      "regex": "^/api/admin/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/admin/users/[id]",
      "regex": "^/api/admin/users/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/admin/users/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/api/orders/[id]",
      "regex": "^/api/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/user/[id]",
      "regex": "^/api/user/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/user/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/student/orders/[id]",
      "regex": "^/student/orders/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/student/orders/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/analytics",
      "regex": "^/admin/analytics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/analytics(?:/)?$"
    },
    {
      "page": "/admin/menu",
      "regex": "^/admin/menu(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/menu(?:/)?$"
    },
    {
      "page": "/admin/menu/new",
      "regex": "^/admin/menu/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/menu/new(?:/)?$"
    },
    {
      "page": "/admin/orders",
      "regex": "^/admin/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/orders(?:/)?$"
    },
    {
      "page": "/admin/profile",
      "regex": "^/admin/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/profile(?:/)?$"
    },
    {
      "page": "/admin/settings",
      "regex": "^/admin/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/settings(?:/)?$"
    },
    {
      "page": "/admin/settings/homepage",
      "regex": "^/admin/settings/homepage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/settings/homepage(?:/)?$"
    },
    {
      "page": "/admin/users",
      "regex": "^/admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users(?:/)?$"
    },
    {
      "page": "/auth/forgot-password",
      "regex": "^/auth/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/forgot\\-password(?:/)?$"
    },
    {
      "page": "/auth/signin",
      "regex": "^/auth/signin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/signin(?:/)?$"
    },
    {
      "page": "/auth/signup",
      "regex": "^/auth/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/signup(?:/)?$"
    },
    {
      "page": "/student",
      "regex": "^/student(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/student(?:/)?$"
    },
    {
      "page": "/student/checkout",
      "regex": "^/student/checkout(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/student/checkout(?:/)?$"
    },
    {
      "page": "/student/help-support",
      "regex": "^/student/help\\-support(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/student/help\\-support(?:/)?$"
    },
    {
      "page": "/student/menu",
      "regex": "^/student/menu(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/student/menu(?:/)?$"
    },
    {
      "page": "/student/order",
      "regex": "^/student/order(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/student/order(?:/)?$"
    },
    {
      "page": "/student/order-success",
      "regex": "^/student/order\\-success(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/student/order\\-success(?:/)?$"
    },
    {
      "page": "/student/orders",
      "regex": "^/student/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/student/orders(?:/)?$"
    },
    {
      "page": "/student/profile",
      "regex": "^/student/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/student/profile(?:/)?$"
    },
    {
      "page": "/student/quick-order",
      "regex": "^/student/quick\\-order(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/student/quick\\-order(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}